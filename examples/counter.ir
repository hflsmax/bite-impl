FullFun main
  Args: []
    Let counter_fptr = FullFun f
        Args: [env, n, lget_fptr, lget_env, lget_jb, lset_fptr, lset_env, lset_jb]
          Let f_env = Var env
          in
            Let i = FullApply
                LHS: Var lget_fptr
                Args: [Var lget_env, Var lget_jb]
            in
              If BOP ==  Var i  Int 0
              Then
                Var n
              Else
                Seq
                  FullApply
                    LHS: Var lset_fptr
                    Args: [Var lset_env, Var lset_jb, AOP -  Var i  Int 1]
                  FullApply
                    LHS: Var f
                    Args: [Var f_env, AOP +  Var n  Int 1, Var lget_fptr, Var lget_env, Var lget_jb, Var lset_fptr, Var lset_env, Var lset_jb]
    in
      Let counter_env = ^ Aux
      in
        Let run_fptr = FullFun run_1
            Args: [env, n]
              Decl s = Var n
              in
                Let lget_fptr = FullFun lget_2
                    Args: [env, jb]
                      Deref Var s
                in
                  Let lget_env = Aux
                  in
                    Let lget_jb = Aux
                    in
                      Let lset_fptr = FullFun lset_3
                          Args: [env, jb, n]
                            Assign
                              Var s
                              Var n
                      in
                        Let lset_env = Aux
                        in
                          Let lset_jb = Aux
                          in
                            FullApply
                              LHS: Var f
                              Args: [Var counter_env, Int 0, Var lget_fptr, Var lget_env, Var lget_jb, Var lset_fptr, Var lset_env, Var lset_jb]
        in
          Let run_env = ^ Aux
          in
            FullApply
              LHS: Var Print
              Args: [FullApply
                LHS: Var run_1
                Args: [Var run_env, Int 100100100]]