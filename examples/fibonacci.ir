FullFun main
  Args: []
    Let fibonacci_fptr = FullFun fibonacciRec
        Args: [env, n]
          If BOP ==  Var n  Int 0
          Then
            Int 0
          Else
            If BOP ==  Var n  Int 1
            Then
              Int 1
            Else
              AOP +  FullApply
                  LHS: Var fibonacciRec
                  Args: [Var env, AOP -  Var n  Int 1]  FullApply
                  LHS: Var fibonacciRec
                  Args: [Var env, AOP -  Var n  Int 2]
    in
      Let fibonacci_env = ^ Aux
      in
        FullApply
          LHS: Var Print
          Args: [FullApply
            LHS: Var fibonacciRec
            Args: [Var fibonacci_env, Int 42]]