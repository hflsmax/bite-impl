eff Fget : ∀[].∀{}.() -> int_[];;
eff Fset : ∀[].∀{}.(int) -> int_[];;

let counter =
  fun f [] {lget : Fget, lset : Fset} (n : int) : int_[~lget, ~lset] is
    let i = raise lget () in
      if i = 0 then 
        n 
      else 
        raise lset (i - 1) ; f {lget lset} (n+1)
    end
  end
in 
  let run =
    fn [] {} (n : int) : int_[] is
      dcl s := n in
        handle lget : Fget = fn [] {} () : int_[] is resume (!s) end in
          handle lset : Fset = fn [] {} (n : int) : int_[] is resume (s := n) end in
            counter {lget lset} 0
          end
        end
      end
    end
  in 
    Print (run 100100100)
  end
end
;;
